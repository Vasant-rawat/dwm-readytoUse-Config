#!/bin/sh

# Exit on error
set -e

# Variables
LOG_FILE="dwm_install.log"
AUTO_INSTALL=false
BACKUP_DIR="$HOME/.config/dwm_backup_$(date +%Y%m%d_%H%M%S)"
WALLPAPER_URL="https://unsplash.com/photos/your-wallpaper.jpg" # Replace with a valid wallpaper URL

# Logging function
log() {
  echo "$(date '+%Y-%m-%d %H:%M:%S') - $1" | tee -a "$LOG_FILE"
}

# Check if a command is installed
command_exists() {
  command -v "$1" >/dev/null 2>&1
}

# Install dependencies if missing
install_dependencies() {
  DEPENDENCIES="kitty nitrogen picom feh rofi slock"
  MISSING_DEPS=""

  for dep in $DEPENDENCIES; do
    if ! command_exists "$dep"; then
      MISSING_DEPS="$MISSING_DEPS $dep"
    fi
  done

  if [ -n "$MISSING_DEPS" ]; then
    log "The following dependencies are missing: $MISSING_DEPS"
    if $AUTO_INSTALL || {
      echo "Do you want to install them? (y/n)"
      read -r choice
      [ "$choice" = "y" ] || [ "$choice" = "Y" ]
    }; then
      log "Installing dependencies..."
      sudo apt-get update
      sudo apt-get install -y $MISSING_DEPS
    else
      log "Skipping dependency installation. Some features may not work."
    fi
  else
    log "All dependencies are already installed."
  fi
}

# Backup existing configurations
backup_configs() {
  log "Backing up existing configurations to $BACKUP_DIR..."
  mkdir -p "$BACKUP_DIR"
  if [ -f "$HOME/.xinitrc" ]; then
    cp "$HOME/.xinitrc" "$BACKUP_DIR/xinitrc"
  fi
  if [ -d "$HOME/.config/nitrogen" ]; then
    cp -r "$HOME/.config/nitrogen" "$BACKUP_DIR/nitrogen"
  fi
  if [ -d "$HOME/.config/picom" ]; then
    cp -r "$HOME/.config/picom" "$BACKUP_DIR/picom"
  fi
}

# Install dwm, dmenu, and dwmblocks
install_suckless_tools() {
  log "Installing dwm..."
  (cd ./dwm && sudo make clean install)

  log "Installing dmenu..."
  (cd ./dmenu && sudo make clean install)

  log "Installing dwmblocks..."
  (cd ./dwmblocks && sudo make clean install)
}

# Download and install JetBrains Mono font
install_fonts() {
  FONT_URL="https://github.com/JetBrains/JetBrainsMono/releases/download/v2.304/JetBrainsMono-2.304.zip"
  FONT_ZIP="JetBrainsMono-2.304.zip"
  FONT_DIR="/usr/share/fonts/truetype/JetBrainsMono"

  log "Downloading JetBrains Mono font..."
  wget -q "$FONT_URL" -O "$FONT_ZIP"

  log "Unzipping font..."
  unzip -q "$FONT_ZIP" -d "$FONT_ZIP.tmp"

  log "Installing font..."
  sudo mkdir -p "$FONT_DIR"
  sudo mv "$FONT_ZIP.tmp/fonts/ttf/"*.ttf "$FONT_DIR/"

  log "Updating font cache..."
  sudo fc-cache -fv

  log "Cleaning up..."
  rm -rf "$FONT_ZIP" "$FONT_ZIP.tmp"
}

# Set up default wallpaper
setup_wallpaper() {
  WALLPAPER_DIR="$HOME/Pictures/Wallpapers"
  WALLPAPER_PATH="$WALLPAPER_DIR/default_wallpaper.jpg"

  log "Setting up default wallpaper..."
  mkdir -p "$WALLPAPER_DIR"
  if ! wget -q "$WALLPAPER_URL" -O "$WALLPAPER_PATH"; then
    log "Failed to download wallpaper. Using a solid color instead."
    convert -size 1920x1080 xc:#2E3440 "$WALLPAPER_PATH"
  fi

  log "Setting wallpaper with nitrogen..."
  nitrogen --set-zoom-fill "$WALLPAPER_PATH" --save
}

# Update .xinitrc to start nitrogen, picom, and dwm
update_xinitrc() {
  XINITRC="$HOME/.xinitrc"
  NITROGEN_COMMAND="nitrogen --restore &"
  PICOM_COMMAND="picom &"
  START_DWM_COMMAND="exec dwm"

  log "Updating .xinitrc to start nitrogen, picom, and dwm..."

  # Create or clear .xinitrc
  echo "# This file is auto-generated by the dwm setup script." >"$XINITRC"
  echo "$NITROGEN_COMMAND" >>"$XINITRC"
  echo "$PICOM_COMMAND" >>"$XINITRC"
  echo "$START_DWM_COMMAND" >>"$XINITRC"

  log "Updated .xinitrc:"
  cat "$XINITRC"
}

# Post-installation instructions
post_install() {
  log "Installation complete!"
  echo "=============================================="
  echo "You can start dwm by running 'startx'."
  echo "If you encounter any issues, check the log file: $LOG_FILE"
  echo "Your previous configurations were backed up to: $BACKUP_DIR"
  echo "=============================================="
}

# Help menu
show_help() {
  echo "Usage: $0 [--auto]"
  echo "  --auto: Automatically install dependencies without prompting."
  echo "  --help: Show this help menu."
}

# Main function
main() {
  # Parse arguments
  for arg in "$@"; do
    case "$arg" in
    --auto) AUTO_INSTALL=true ;;
    --help)
      show_help
      exit 0
      ;;
    *)
      echo "Unknown option: $arg"
      show_help
      exit 1
      ;;
    esac
  done

  # Check for root privileges
  if [ "$(id -u)" -ne 0 ]; then
    log "This script requires root privileges. Please run with sudo."
    exit 1
  fi

  # Start installation
  log "Starting dwm installation..."
  install_dependencies
  backup_configs
  install_suckless_tools
  install_fonts
  setup_wallpaper
  update_xinitrc
  post_install
}

# Run the script
main "$@"
